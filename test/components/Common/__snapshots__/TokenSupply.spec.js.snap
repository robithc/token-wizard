// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TokenSupply should render TokenDecimals component 1`] = `
<div
  className="sw-InputField2 "
>
  <div
    className="sw-FormControlTitle"
  >
    <label
      className="sw-FormControlTitle_Label"
    >
      Supply
    </label>
    <div
      className="sw-FormControlTitle_Info"
      tabIndex="-1"
    >
      <span
        className="sw-FormControlTitle_Tooltip"
      >
        The total supply of the token
      </span>
    </div>
  </div>
  <input
    className="sw-TextField"
    id="supply"
    min="0"
    name="supply"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="Enter here"
    type="number"
    value=""
  />
</div>
`;

exports[`TokenSupply should render TokenSupply component and its children 1`] = `
<div
  className="sw-InputField2 "
>
  <div
    className="sw-FormControlTitle"
  >
    <label
      className="sw-FormControlTitle_Label"
    >
      Supply
    </label>
    <div
      className="sw-FormControlTitle_Info"
      tabIndex="-1"
    >
      <span
        className="sw-FormControlTitle_Tooltip"
      >
        The total supply of the token
      </span>
    </div>
  </div>
  <input
    className="sw-TextField"
    id="supply"
    min="0"
    name="supply"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="Enter here"
    type="number"
    value=""
  />
</div>
`;

exports[`TokenSupply should render TokenSupply component and its children, with input field disabled 1`] = `
<ReactFinalForm
  component={[Function]}
  disabled={true}
  errorStyle={
    Object {
      "color": "red",
      "fontWeight": "bold",
    }
  }
  onSubmit={[MockFunction]}
>
  <TokenSupply
    __versions={
      Object {
        "final-form": "4.6.1",
        "react-final-form": "3.4.0",
      }
    }
    batch={[Function]}
    blur={[Function]}
    change={[Function]}
    dirty={false}
    dirtySinceLastSubmit={false}
    disabled={true}
    errorStyle={
      Object {
        "color": "red",
        "fontWeight": "bold",
      }
    }
    errors={
      Object {
        "supply": "Please enter a valid number greater than 0",
      }
    }
    focus={[Function]}
    form={
      Object {
        "batch": [Function],
        "blur": [Function],
        "change": [Function],
        "focus": [Function],
        "getFieldState": [Function],
        "getRegisteredFields": [Function],
        "getState": [Function],
        "initialize": [Function],
        "isValidationPaused": [Function],
        "mutators": Object {},
        "pauseValidation": [Function],
        "registerField": [Function],
        "reset": [Function],
        "resumeValidation": [Function],
        "setConfig": [Function],
        "submit": [Function],
        "subscribe": [Function],
      }
    }
    handleSubmit={[Function]}
    hasSubmitErrors={false}
    hasValidationErrors={true}
    initialize={[Function]}
    invalid={true}
    mutators={Object {}}
    pristine={true}
    reset={[Function]}
    submitFailed={false}
    submitSucceeded={false}
    submitting={false}
    touched={
      Object {
        "supply": false,
      }
    }
    valid={false}
    validating={false}
    values={Object {}}
    visited={
      Object {
        "supply": false,
      }
    }
  >
    <Field
      component={[Function]}
      description="The total supply of the token"
      format={[Function]}
      label="Supply"
      min="0"
      name="supply"
      parse={[Function]}
      placeholder="Enter here"
      type="number"
      validate={[Function]}
    >
      <InputField2
        description="The total supply of the token"
        input={
          Object {
            "name": "supply",
            "onBlur": [Function],
            "onChange": [Function],
            "onFocus": [Function],
            "value": "",
          }
        }
        label="Supply"
        meta={
          Object {
            "active": false,
            "data": Object {},
            "dirty": false,
            "dirtySinceLastSubmit": false,
            "error": "Please enter a valid number greater than 0",
            "initial": undefined,
            "invalid": true,
            "pristine": true,
            "submitError": undefined,
            "submitFailed": false,
            "submitSucceeded": false,
            "touched": false,
            "valid": false,
            "visited": false,
          }
        }
        min="0"
        placeholder="Enter here"
        type="number"
      >
        <div
          className="sw-InputField2 "
        >
          <FormControlTitle
            description="The total supply of the token"
            title="Supply"
          >
            <div
              className="sw-FormControlTitle"
            >
              <label
                className="sw-FormControlTitle_Label"
              >
                Supply
              </label>
              <div
                className="sw-FormControlTitle_Info"
                tabIndex="-1"
              >
                <span
                  className="sw-FormControlTitle_Tooltip"
                >
                  The total supply of the token
                </span>
              </div>
            </div>
          </FormControlTitle>
          <TextField
            autoComplete="off"
            className="input"
            id="supply"
            min="0"
            name="supply"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder="Enter here"
            type="number"
            value=""
          >
            <input
              className="sw-TextField"
              id="supply"
              min="0"
              name="supply"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              placeholder="Enter here"
              type="number"
              value=""
            />
          </TextField>
          <Errors
            name="supply"
          >
            <Field
              format={[Function]}
              name="supply"
              parse={[Function]}
              render={[Function]}
              subscription={
                Object {
                  "error": true,
                  "pristine": true,
                  "touched": true,
                }
              }
            />
          </Errors>
        </div>
      </InputField2>
    </Field>
  </TokenSupply>
</ReactFinalForm>
`;
